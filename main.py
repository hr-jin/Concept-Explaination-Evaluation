import argparse
from utils import *
from config import cfg as default_cfg
import logging
from dataloaders import dataloader_factory
from extractors import extractor_factory
from datasets_ import dataset_factory
from models import model_factory
from evaluators import evaluator_factory
from metric_evaluators import metric_evaluator_factory
import json


def main():
    """
    Here we take the process of concept extraction by autoencoder as an example.
    """
    logging.basicConfig(format="%(asctime)s - %(levelname)s - %(message)s", level=logging.INFO, force=True)
    logger = logging.getLogger('logger')


    torch.set_default_dtype(torch.float32)

    parser = argparse.ArgumentParser()
    cfg, args = arg_parse_update_cfg(default_cfg, parser)
    
    set_seed(cfg['seed'])

    model = model_factory(cfg)
    
    logger.info('loaded model...')
    
    cfg = process_cfg(cfg, model)
    print(json.dumps(cfg, indent=2))
    
    train_data = dataset_factory(cfg)
    dataloader = dataloader_factory(cfg, train_data, model)
    extractor = extractor_factory(cfg, dataloader)
    if cfg['load_extractor']:
        logger.info('loading extractor...')
        extractor = extractor.load_from_file(dataloader, cfg['load_path'], cfg).to(cfg['device'])
    else:
        logger.info('extract concepts...')
        extractor.extract_concepts(model)
        
    concepts = extractor.get_concepts()
    print('concept vectors:', concepts)
    print('concepts.shape:', concepts.shape)
    
    # concept_idxs = [3676, 2397, 1889,  884, 1949, 3966,   49, 3665,  350, 3936,  461,
    #    3627,  263, 4076,  208, 2797, 1802, 3541, 3604, 2762, 2657, 1676,
    #    3336, 3875, 3307, 3798, 1842, 1571, 2749,  695, 2130, 1003, 3749,
    #    1066, 2784, 1437, 1537, 2084, 3038, 3455, 1484, 1884, 2110, 2582,
    #    1662, 3103, 3583,  516,  388, 3809, 2897, 4011, 1278, 1512, 1481,
    #    3897, 3509,  820,  859, 3406, 2907, 2178, 3064, 2583, 1394, 1474,
    #    2831,  515, 3763, 1081,  125, 3969, 1837,  514,  113, 2250, 3047,
    #    4089, 3877, 1823,  758,  430, 1166, 1247, 1739, 2555, 1141, 2993,
    #     560, 2021,  323, 3220, 3500, 3712, 2687, 2799, 2578, 1290, 1404,
    #    4057]
    
    # concept_idxs = [2841, 1411, 1284, 3689, 3863, 1986,  357,  366,  754, 1073, 4078,
    #    2217, 2245,   29, 1801,  236,  641,   31, 4019, 2208, 2809, 2398,
    #    2723, 3849,  565, 1733, 3429, 2695,  627, 2007, 2872,  668, 2690,
    #    1699,   19, 1408, 3003, 1448,  347, 2345, 1516, 2276, 1623, 3010,
    #    1093,  979, 2361, 1159,  258, 1558, 2423,  601, 1720, 2573, 2560,
    #    1149, 3850, 1249,  289,   20, 2662, 4069, 3395, 3562, 2828, 2352,
    #    3342, 1727, 3883, 1852, 2142, 3922, 1826, 2192, 2337, 1771, 4053,
    #      47, 2864, 1108,  453,  418, 1932, 1893, 2473,  855, 1075,  255,
    #    1144, 2513, 2808, 1131,  247, 2703,  513, 3149, 3909, 1566,   52,
    #    1256]
    
    # concept_idxs = [2538, 3986, 3300, 3681,  531, 2384, 3914,  998,  636,  791, 2970,
    #    1651, 3295, 1235, 1389, 3137,  500,  160, 1520, 4010, 3673, 2663,
    #    3311, 3786, 1113,  404, 2852, 1115, 1114, 1337, 2474, 2306,  687,
    #    1638, 3536, 1528, 1882,  765, 3566, 1622, 2708, 1724, 1139, 3051,
    #     691, 2859,  288, 3145,  760, 2070, 2042,  442, 2246, 3484, 2227,
    #    1280, 3113, 1024, 2331,  443, 3974, 1352, 1489, 1098, 3449, 2999,
    #    1241, 3942, 2259, 2129,  718, 2992, 1106, 3352, 2874, 2120, 2545,
    #     910, 2660, 3411,   38, 3896, 2568, 3065, 2174, 2078, 3574, 3095,
    #    2189, 1104, 2514, 3150,  880, 2697, 3186, 1557, 3077,  779, 3872,
    #    3769]
    
    # 200 1
    # concept_idxs = [3676, 1647, 3046, 2810, 1519,  763, 3264,  884,  740, 2036,   24,       3599, 3610,  310,   49,  217, 2594,  405, 3431,  978,  619, 3936,       3116, 2600, 3778,   81, 2877,  413,  263,  496,  982, 1583, 3161,        497,  843, 2797,  379, 3253,  329, 2541, 1863, 1956, 3604, 1996,        316, 3326,  545,  519, 1092, 1676, 2087,  265, 2035, 2426, 2027,         28, 3307, 4073,  448, 3992, 1032, 1398,  947, 1571,  750, 1022,       2162, 1792, 1717,  259, 2130,  137,  966, 3545, 1529, 2851,  956,       1066,  484,  375, 1297,  540, 3349, 2472, 1537, 3328, 3510, 1891,       3820, 2972, 2030, 3455, 3323, 1160, 1774, 2308,  449, 3059, 2110,       3002,  885, 3029, 2654, 2634, 3699, 3103,  773, 2400,  147, 2535,       2074, 3420,  388, 3503, 3847, 1661, 2981, 1017, 1246, 4011,  282,        660,  844, 3880, 3865, 1109, 1481, 1548, 2755, 1078, 1937, 1460,       3708,  820, 2277, 2609, 1070,  200, 3978,  250, 2907, 1912,  414,       1035, 1669, 2616, 2040, 2583,  466, 2310, 1013, 3393, 2320,  254,       2831,  332, 3428,  337, 3709, 3473, 2734, 1081,   10, 1749, 2699,       2849, 3575, 1088, 1837, 1514, 2968, 1356, 3343, 4080, 3104, 2250,        693,  926, 1706,  106, 2791, 1868, 3877, 2858, 2177, 2286, 2436,       3758, 1363,  430, 2532, 1903, 2597,  616, 2682, 1014, 1739,  244,       2700, 2137]
    
    # # 200 2
    # concept_idxs = [2841,  338, 1344, 1997, 2641, 2866, 3344, 3689, 2889, 3066, 3233,3005, 3550, 4091,  357, 1215, 1983, 1921, 3669, 3912, 3450, 1073,       3076, 3851, 2735, 1944,  590, 3961, 2245, 3488, 4040, 2540, 3845,       1148, 1347,  236, 2656, 2257, 3624, 3976, 1927, 2926, 4019,  336,       1829, 1812, 2658, 3134, 4003, 2398, 1180, 1624, 2904, 3477, 2350,       4043,  565, 2343, 1813, 2586, 2832, 2888, 1594, 2695, 2590,  711,        729, 1498,  297, 2763, 2872, 1916, 3324, 3413,  159,  633,  389,       1699, 2258,  856, 2413,  700, 1691, 1138, 3003,   32,  213, 3836,        274, 1469, 1839, 2345, 1914,  114, 1834, 1090, 2191,  251, 1623,       1429, 3179, 3996,  650, 2857, 3959,  979, 2777, 2409,   71,  118,       3260, 2140,  258,  469, 3466,  386, 2528,  792, 2085,  601,  380,       1110, 1076, 3026,   18, 2642, 2560, 3119, 3422, 3848, 3199, 1705,       1029, 1249, 3442,  140, 2935, 2358,  925, 1502, 2662, 2124, 1058,        553, 3791, 3775, 3218, 3562, 2235, 3513,  814,  520, 1867, 2219,       3342,   35, 1918, 1378, 4083, 3554,  701, 1852, 1856, 3701, 3197,        187, 3340, 2925, 1826,  975, 3292, 1111, 1177, 2238, 2263, 1771,       2914,  262, 2048, 2248,  266,  811, 2864, 3740, 3405, 1643, 2938,       2133, 1419,  418,  411, 1784, 2816, 2121, 1374, 3024, 2473, 3153,        853, 2218]
    
    # # 200 3
    # concept_idxs = [2538,  706, 2903, 3829,  481,  747, 1414, 3681, 1616, 2633, 3052,       2099, 3693,  170, 3914, 3501, 1585, 1226,   99, 3892, 3594,  791,       1445, 2704,  858, 2197, 1525,  363, 3295,  977, 1930, 2372, 3028,       3748, 1061, 3137,  901, 1511, 1368, 2878, 2265, 2563, 1520, 2196,         17, 2901, 3090,   90, 2147, 2663, 3618, 1877, 2063,  799, 2821,       3074, 1113, 1034, 3214, 1260, 3390, 1574,  179, 1115, 1504, 1416,       3265, 1785,  557,  493, 2474,  790, 4006,   75, 1656,   70, 3947,       1638, 1958, 3421,  874,  959,  214, 1607, 1882, 3084, 1390, 1901,        345, 1966, 2517, 1622, 3631, 1055,  238,  696, 3184, 1364, 1139,       1642,  354,  862, 1874, 1096, 2822, 2859,  318, 3861,  882, 1917,       3573, 3247,  760, 3055, 2463, 1158, 4050, 3508, 1027,  442, 2684,        580, 3641, 1383, 1738,  312, 2227,  905, 2776,  498, 4020, 3529,       1701, 1024,  997, 2268, 1428, 3261, 2706, 3350, 3974,  270, 3020,        699, 2902, 2014, 3332, 1098, 1841,   12, 3514,  591, 2603, 2255,       1241,  424, 3039, 1708,  551, 1620, 2462, 2129,  981, 3788, 3062,        886, 2056,  732, 1106, 2579, 3945, 3989,  757, 2732, 2199, 2120,       3170,  678, 2607,  483, 2522, 2145, 2660,  185, 1204, 2939,  286,       1961, 2249, 3896,  197, 2052, 3940, 3387, 3057, 1721, 2174,  212,       3317, 2924]
    
    # layer 0
    # concept_idxs = [1648,  206, 3352, 3852,  614, 1759, 2931, 2746, 2057, 2843, 3362,       2603,  637, 3668, 3681, 2397, 2222, 3751, 3540, 1382, 2959,  783,       3753, 4089, 1363, 2195, 1099, 2419,  992, 3032, 3109, 2143,  366,       2337,  747, 1706, 1830, 3225,  400, 1603, 1324,  736, 1407, 3490,       3000, 2542, 2139, 1943,  388, 2355, 2037, 3419, 2632,  597, 1209,        335, 4082, 3266, 3677, 1522, 2780, 3020, 2424, 2175, 2640,  504,       1493, 1134, 3854, 3640, 3033, 3465, 1292, 2796, 1786,  137,  173,       1312, 2109, 1044,  280, 1884, 1210, 2268, 3227, 2235, 1367,  617,        134, 3917, 1067, 3815, 2544, 3711,  641, 1932, 1784, 3407, 3051,       1035, 2659,  186, 3812, 2772, 1851,  329,  363, 1172, 1239, 3690,        282, 1635, 1053, 3676, 1692, 3133, 1118, 1848, 1902,  233, 2820,       2589, 1735, 3559,  334, 1616,   82, 2978, 3245,   98,  199,  497,       1645, 2472, 3797,   30, 3602,  917, 3139, 3961, 2670, 2618,  314,       3773, 2556, 1273, 1542, 2590, 2971, 2454, 2864, 1900, 2173, 4066,        376, 2578, 1503, 1998, 2082, 1069, 2533,  691,    6, 3198,  142,        769, 3377,  132, 2948, 3056,  632,  965, 1201, 3026, 3439,  954,         89, 2306, 1082, 1869,  987, 1873, 2631,  746, 2921, 1075, 3791,        657, 2300, 3737, 1664, 2858,  195,   33,  724, 2878, 1438, 3694,        906,  608]
    
    # # layer 1
    # concept_idxs = [3374,  524,  916,  751, 2858, 2804, 2573, 3325, 1887,  130, 2517,       3191,  173, 2547,  759, 1548, 1102, 1783, 1604,  968, 3174, 1740,         56, 3504, 1594, 3663, 3976, 3152, 3276, 1443,  834, 3129, 1171,       2259, 1107, 2622, 2104,   13, 1708, 2137, 2713, 1137, 3572, 1643,        997, 2409,  346, 2942, 3979,  457, 1777, 2784, 3706,  923, 1383,       1093, 1854,  745, 1770, 2663,  333,   50, 3258, 4015, 3532, 2972,       3240, 2960, 2310, 1562, 2415,   38, 2254, 3947, 2101, 2505,  191,        103,  513, 1759, 2499, 2368,  454, 1493,  382,  293, 1949, 2585,       3695,  807, 1980, 2248, 1957,   57, 2962, 3221, 1863, 1556, 1212,       3696, 2935, 2356, 3285, 3907, 2645, 3783, 2423, 1862, 2956,  302,       3640,  507, 1818, 3073,  981,  932, 2763, 1457, 1502, 2224,    9,       3172, 3816, 4082, 3963,  320, 2965, 2103, 1565, 1128, 1108, 2258,        688, 4029,  799, 1757, 3272, 1306, 2095, 1764, 2611, 1449, 3332,       1900, 3721, 1299, 1531, 2707,  299, 3474, 3600, 2892, 1673,  718,        690, 3109, 2683, 3528, 2393,  290, 3235, 1829,  360,  882, 3056,       1694,  533,  754, 2380, 1157, 2050, 3500, 2852,   73,  950, 3972,       1774, 4020, 3023,  508,  491,  324, 3481, 2867, 1226, 3307, 1436,       1086, 3805,  535, 1786, 1652,  267,  107, 1328,  566,  787, 1476,       2594, 2628]
    
    # # layer 2
    # concept_idxs = [2497, 1117, 2028, 3429,  980, 4090, 1872, 2827, 1953, 3836, 2391,        750, 3399, 2895, 1696, 2475, 1056, 3423, 1115, 2891,  684,  253,       1343, 2974,  982, 3312, 2645, 2366, 1544,  435, 1031, 2389, 2659,       2226, 1959,  948, 1084, 1861, 1767, 3765, 3630, 2054, 3820, 2726,        201, 3951, 1504, 2118, 3531, 1866, 2340, 2859,  356, 1327,  751,       1617, 1386, 1621, 2596, 2134,  546, 3297,   63, 2577, 2928, 2979,        239, 2361,  894, 2548, 2096,  605, 2923, 1515,  558, 1437, 2410,       3835, 3684, 1604, 2086, 3301, 3213, 4023, 1246, 3475, 2363, 3945,         72, 3171, 1248, 2518, 3361,   43,  869,  132,  242, 2668,  669,       1364, 3595, 1182, 1625, 3795, 4073, 2762, 1291,  599,  433, 3631,         14,  867, 1841, 2796, 3140, 3792, 3245, 3352, 1876,  471, 2676,       1268, 2457, 1901, 2489, 2198, 3695, 2634,  937, 2528, 3936,  149,       2588, 1567, 1638,  866,  412, 1145, 3656,  527, 1860, 3382,  882,       1030,  700, 1153,  945, 2137, 2070,  915, 2336, 1695, 1947, 2219,       2126, 1319, 2982,  437, 3642,  511, 1936, 4058,  328, 2666, 1107,       2630, 3001, 2888,  719,  287,  764, 2881, 3158,  983, 2329, 1156,       2326, 2101, 2665, 3791, 3957, 1609, 1974, 2127, 3397,  596,  151,        886, 3895, 1919, 3315, 3467,  875,  811, 2482, 1725,  929, 3468,       2212, 3682]
    
    # # layer 3
    concept_idxs = [2538,  706, 2903, 3829,  481,  747, 1414, 3681, 1616, 2633, 3052,       2099, 3693,  170, 3914, 3501, 1585, 1226,   99, 3892, 3594,  791,       1445, 2704,  858, 2197, 1525,  363, 3295,  977, 1930, 2372, 3028,       3748, 1061, 3137,  901, 1511, 1368, 2878, 2265, 2563, 1520, 2196,         17, 2901, 3090,   90, 2147, 2663, 3618, 1877, 2063,  799, 2821,       3074, 1113, 1034, 3214, 1260, 3390, 1574,  179, 1115, 1504, 1416,       3265, 1785,  557,  493, 2474,  790, 4006,   75, 1656,   70, 3947,       1638, 1958, 3421,  874,  959,  214, 1607, 1882, 3084, 1390, 1901,        345, 1966, 2517, 1622, 3631, 1055,  238,  696, 3184, 1364, 1139,       1642,  354,  862, 1874, 1096, 2822, 2859,  318, 3861,  882, 1917,       3573, 3247,  760, 3055, 2463, 1158, 4050, 3508, 1027,  442, 2684,        580, 3641, 1383, 1738,  312, 2227,  905, 2776,  498, 4020, 3529,       1701, 1024,  997, 2268, 1428, 3261, 2706, 3350, 3974,  270, 3020,        699, 2902, 2014, 3332, 1098, 1841,   12, 3514,  591, 2603, 2255,       1241,  424, 3039, 1708,  551, 1620, 2462, 2129,  981, 3788, 3062,        886, 2056,  732, 1106, 2579, 3945, 3989,  757, 2732, 2199, 2120,       3170,  678, 2607,  483, 2522, 2145, 2660,  185, 1204, 2939,  286,       1961, 2249, 3896,  197, 2052, 3940, 3387, 3057, 1721, 2174,  212,       3317, 2924]
    
    # # layer 4
    # concept_idxs = [ 568, 3388,  270,  221,  327, 2841,   97,  232,  797,  506, 4036,       3965, 4007, 2834, 2102, 2010, 1224, 2167, 1597, 2374, 2255, 3063,       2360, 3780,  266, 2466, 1926, 2960, 2384,   64, 1642, 3222, 2316,       1524, 1771, 1310, 2992, 1802, 1232, 2476, 1826, 3622, 3487,   51,       3246, 2748, 3000,  322, 1017, 3202,   92, 1057, 1544, 1047,  595,        866, 1696,  543, 3375,   74, 1029, 3789, 1480,   96, 3401, 2355,       3946, 3632,  966, 3480,  553, 3803, 2435,  782, 1534, 3062,  872,       3211, 1954, 2402, 3605, 1387, 1510,  431, 2333,  344, 3636, 1016,       1235,  123, 2099,  288, 1058, 2916,  527, 2371,  748, 2381, 2211,       1160, 1231, 2715, 2544,   28, 1444,  993, 1026,  973,  970, 3912,        222, 3258, 2891, 3179, 2945, 1485, 1825,  472, 4014, 2980, 3520,       3176, 3577, 1729, 1863,  246, 1692, 1590, 3078, 1653, 2359,  843,       1280, 2397,  768,  741, 1392, 2580, 2858,  346,  156, 4040, 3723,       1839, 1520, 2676,  429, 1045, 2390, 1426,  833, 1813, 2948, 2868,       3060, 1644, 4094, 3929, 2477, 3129,  376, 3418, 3376, 2177, 3759,       1202, 2769, 2638,  225, 2815, 3829, 3374, 1402, 2468, 2429, 1486,       1558, 1225, 4069, 3438, 3180, 2283, 1919, 1406,  829, 3231, 1682,       3529, 3325,  959, 1726, 1191, 1561, 3136, 2832, 3238, 2835, 2187,       2522, 1162]
    
    # # layer 5
    # concept_idxs = [1374, 2713,  614, 3562, 1382, 2946, 1458,  791, 1242, 2402, 2389,       3605,   31, 3622, 1260,  292, 2209, 2357, 1884,  524, 3358, 1210,       1143, 2646,  713, 1066, 3152, 3147, 3658, 2203, 1381, 3904, 2802,        617, 2761,  411, 2838, 3666, 2422, 2158, 3899, 3610,  165,  978,       2161, 3619, 1064,  492, 3295, 4091, 2007, 3599,  448, 2522, 1925,        512,  931, 2175, 3973, 1075,  958, 2489, 3373,  257, 2446, 2399,       2596,  388, 4065, 2788, 3212, 1704, 3370, 2897, 2323, 2190, 3734,       4033,  395,  519,  658,  228, 1131, 3119, 2261,  567, 3459, 3563,       2095, 3645, 2518, 1784, 3410, 2693, 2108,  509, 2255,   55, 1510,       1741, 2622, 1446,  651, 2271, 3890, 2544, 3016, 3657, 2094, 2584,       1535, 1609, 1590,  210,  217, 2914, 2089, 3225, 3544, 3489,  379,       3178,  456, 1991, 3257, 3150, 3301, 3387, 3118, 1720, 3259, 2316,       2909,  771, 3105, 1894, 2484,  254, 1276, 3934, 3593, 3169,  286,        669, 1464, 1616, 2299, 2134, 2986, 3228, 3215,  513, 1310, 1519,       1654,  972, 1398, 2102, 3866, 2341, 2048,  873,  608, 2581,  924,       2577,  352,  474, 2854, 2017, 1605, 3451,  437, 3198, 2768, 1896,        301, 1017, 2406, 3025,  694, 1711, 3165, 2851, 2206, 1785, 3731,       1650, 3997, 2801,  314, 2865, 3931, 3756,  609, 1824, 2847, 2753,         39, 3656]
    
    # # gpt2-small layer6
    # concept_idxs = [ 557,  742,  402, 1990, 2254, 2588, 1149,  462, 1995, 2369, 2689,        169, 1138, 1609,  644,  697, 1961, 2766, 2073, 2728, 1041, 2243,       1863, 2598,  419,  150, 2100, 2708, 3011,  155, 2616,  579,  357,        228, 2548,   11, 1326, 1948, 2972, 2157,  837, 2258, 2232, 2191,       1370, 1380, 1236, 2346, 1302,  725, 2670, 2531, 2909, 1469, 2914,       2975, 1832,  757, 1729, 2746,  252, 1309, 1092, 1985,  594,  186,       1454, 1551, 2664, 2753, 1966,  746,  586,  514,  860,  627,  768,       2009,  488,  880,  459,  133, 1235, 1220, 1596, 2025,  543, 1081,       2491,  335, 2808, 1611, 1812, 1058, 2481, 2607, 2695, 1673, 1506,         20,  233,  547,  894, 1657, 1767, 1144, 3016,  244, 1136, 2693,        693, 2925, 1722,  832,  317,  607,  568,  750, 2648,  111, 1307,       1063, 1843, 2759, 1013, 2631, 2712,  238,  695, 1710, 1413, 3046,       1988, 1741,    2, 2132, 1419,  358, 1878, 1840,  313, 2391,  716,       2102, 2007, 2821,  920, 2869,  730,  926, 1109,  411,  706,  636,       1368,  733,  563, 1346,  751, 2196, 1553, 1011, 2513,  612, 2205,       1975, 2419,  539, 2284,  231,  315,  487, 1598, 2476, 2623,  218,        290,  296,  873, 1869, 2543, 2550,  626, 2458, 1712, 1643, 1664,       1993, 2069,  952,  780, 1214, 1831, 1200, 1656, 1053, 2324,  896,       2866, 1164]
    
    # # llama2-7b layer16
    # concept_idxs = [12117, 14375, 13655,  7605,  4026, 11298,  7246, 11015,  7883,        2057, 10876, 15826,  1400, 12486, 12019, 12452, 11117, 13417,       14246,  2297, 10331,  5806,    61, 13351, 11236,  6968, 10102,       12363,  9303,  7956, 10254,  5656,  3948,  8328, 13337,  4512,        3325, 16049,  7902,  5080,  7125,  6609, 15515,  5470, 15491,       11754,  4023, 11923, 11018,  2664, 10240, 10655,  5334,  1150,       10834, 14201,  7717,  8430, 13596,  4615,  8763, 10776,  2074,       16113,  3522, 12584,  5584, 15619,  8469, 12596,  1808, 11627,       13928, 16161, 11307,  9951,  3272,    10,  5976,  2150, 12081,        9148, 11991,  4300, 12709, 15559,  7513,  5450, 11492,  4659,       11241,   336, 14002, 10174, 15031, 14640, 11333,  5981,  3635,         687, 11966,  4394,  9964, 11206,  5908,  9369, 13134,  5574,        8974,  6442,  1697,  1599,  1209,  5284,  2187, 12928,  4867,        2722, 10511, 12341, 10370,  6010,  2194, 13471,  2105,  9968,        1601, 11985, 14907,  5691, 10058,  9702,  7440,  1685,   429,       13915, 13485,  5565, 10040,  2072, 12947,  7843, 13438,   696,        4795,  1940,  3514,  5953, 13847,  7676,  9609,  1373,  8824,       16050, 12400, 12782,  9709, 11266, 14530, 12274,  5731, 10826,        1723, 15306, 11435,  5687, 11071, 12672,  4333,   944, 14727,        4368,  7699,  8371,  8646, 10628, 12641,  8831, 13029,  6441,        8943, 15565,  9753, 11115,  2015,  2225, 15853, 12668,  8972,        5298,  8332,  2634, 13502, 13243, 16054,  1642, 11538,  2198,        5214,  7731]
    
    
    # concept_idxs = [i for i in range(100)]
    # concept_idxs = [i for i in range(1)]
    concept_idxs = concept_idxs[180:]
    
    token_list = []
    origin_token_list = []
    print('\nconcept idxs:', concept_idxs)
    for _ in range(5):
        tokens, origin_tokens = dataloader.get_processed_random_batch()
        token_list.append(tokens)
        origin_token_list.append(origin_tokens)
    tokens = torch.cat(token_list, 0)
    origin_tokens = torch.cat(origin_token_list, 0)
    print('len(origin_token_list):',len(origin_token_list))
    evaluator_dict = dict()
    
    # cfg['evaluator'] = 'faithfulness'
    # for disturb in ['gradient','ablation']: 
    #     for measure_obj in ['loss','next_logit','pred_logit','logits']: 

    #         if measure_obj == 'logits':
    #             for corr_func in ['KL_div']:
    #                 if disturb == 'gradient':
    #                     continue
    #                 for topk in [1000]:
    #                     extractor_str = disturb + '_' + measure_obj + '_' + corr_func + '_top' + str(topk)
    #                     evaluator_dict[extractor_str] = evaluator_factory(
    #                     cfg, 
    #                     extractor.activation_func, 
    #                     model,
    #                     concept=None, 
    #                     concept_idx=None, 
    #                     disturb=disturb, 
    #                     measure_obj=measure_obj, 
    #                     corr_func=corr_func, 
    #                     class_idx=-1, 
    #                     logits_corr_topk=topk,
    #                     )
    #         else:
    #             extractor_str = disturb + '_' + measure_obj
    #             evaluator_dict[extractor_str] = evaluator_factory(
    #                 cfg, 
    #                 extractor.activation_func, 
    #                 model,
    #                 concept=None, 
    #                 concept_idx=None, 
    #                 disturb=disturb, 
    #                 measure_obj=measure_obj, 
    #                 corr_func='KL_div', 
    #                 class_idx=-1, 
    #                 logits_corr_topk=None,
    #             )
    
    cfg['evaluator'] = 'itc'
    evaluator_dict.update({
        'itc_emb_dist': evaluator_factory(
            cfg, 
            extractor.activation_func, 
            model,
            concept=None, 
            concept_idx=None, 
            pmi_type='emb_dist', # ['uci', 'umass', 'silhouette']
        ),
        'itc_emb_cos': evaluator_factory(
            cfg, 
            extractor.activation_func, 
            model,
            concept=None, 
            concept_idx=None, 
            pmi_type='emb_cos', # ['uci', 'umass', 'silhouette']
        ),
        'itc_uci': evaluator_factory(
            cfg, 
            extractor.activation_func, 
            model,
            concept=None, 
            concept_idx=None, 
            pmi_type='uci', # ['uci', 'umass', 'silhouette']
        ),
        'itc_umass': evaluator_factory(
            cfg, 
            extractor.activation_func, 
            model,
            concept=None, 
            concept_idx=None, 
            pmi_type='umass', # ['uci', 'umass', 'silhouette']
        ),
        
    })
    
    cfg['evaluator'] = 'otc'
    evaluator_dict.update({
        'otc_emb_dist': evaluator_factory(
            cfg, 
            extractor.activation_func, 
            model,
            concept=None, 
            concept_idx=None, 
            pmi_type='emb_dist', # ['uci', 'umass', 'silhouette']
        ),
        'otc_emb_cos': evaluator_factory(
            cfg, 
            extractor.activation_func, 
            model,
            concept=None, 
            concept_idx=None, 
            pmi_type='emb_cos', # ['uci', 'umass', 'silhouette']
        ),
        
    })


    metric_evaluator = metric_evaluator_factory(cfg)
    metric_of_metrics = metric_evaluator.get_metric(
        tokens, 
        evaluator_dict, 
        concepts=concepts[concept_idxs],
        concept_idxs=concept_idxs,
        origin_tokens=origin_tokens,

    )
    print('metric_of_metrics:\n',metric_of_metrics)
    
if __name__ == "__main__":
    print('Hello guys!')
    main()